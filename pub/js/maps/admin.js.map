{"version":3,"sources":["admin.js"],"names":["url","selectorEl","document","getElementById","messageAreaEl","formContainers","project","occupation","education","formToggles","toggleCreate","toggleUpdate","toggleDelete","createForms","getElementsByClassName","updateForms","deleteForms","projectForms","createFormEl","updateFormEl","deleteFormEl","createForm","titleEl","descEl","urlEl","updateForm","titleOldEl","deleteForm","educationForms","nameEl","schoolEl","typeEl","startEl","endEl","nameOldEl","occupationForms","companyEl","oldEntryEl","entryEl","loadSelectBoxes","data","innerHTML","projects","forEach","datum","ID","Title","educations","Name","educationTypes","Type","occupations","Company","addEventListener","e","target","classList","add","remove","i","length","options","selectedIndex","value","preventDefault","fetch","method","body","JSON","stringify","dataset","title","description","then","response","json","reset","catch","err","console","log","id","company","start","end","name","school","typeID"],"mappings":"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","file":"../admin.js","sourcesContent":["const url = \"http://localhost/projekt/index.php\";\r\n\r\n/* ============= */\r\n/* = Bindings = */\r\n/* ============= */\r\n\r\n/* - Dataset selector - */\r\n// Used to choose between different datasets.\r\nconst selectorEl = document.getElementById(\"admin-selector\");\r\n\r\n/* - Message area  - */\r\n// Used to display success- and error messages.\r\nconst messageAreaEl = document.getElementById(\"admin-message-area\");\r\n\r\n    /* - Form containers - */\r\n    // Used to access the containers that hold the different dataset-forms.\r\n    const formContainers = {\r\n        project = document.getElementById(\"project-form-cont\"),\r\n        occupation = document.getElementById(\"occupation-form-cont\"),\r\n        education = document.getElementById(\"education-form-cont\")\r\n    }\r\n\r\n\r\n/* - Form navigation buttons - */\r\n// Used to switch between the different CRUD-options.\r\nconst formToggles = {\r\n    toggleCreate = document.getElementById(\"toggle-create\"),\r\n    toggleUpdate = document.getElementById(\"toggle-update\"),\r\n    toggleDelete = document.getElementById(\"toggle-delete\")\r\n}\r\n\r\n    /* - Forms lists - */\r\n    // Used to toggle all forms of a specific type.\r\n    const createForms = document.getElementsByClassName(\"form-create\");\r\n    const updateForms = document.getElementsByClassName(\"form-update\");\r\n    const deleteForms = document.getElementsByClassName(\"form-delete\");\r\n\r\n\r\n/* - Project forms - */\r\n// Used to access inputs and of the project-dataset.\r\nconst projectForms = {\r\n    createFormEl = document.getElementById(\"project-form-create\"),\r\n    updateFormEl = document.getElementById(\"project-form-update\"),\r\n    deleteFormEl = document.getElementById(\"project-form-delete\"),\r\n\r\n    /* - Create - */\r\n    createForm = {\r\n        titleEl = document.getElementById(\"project-create-title\"),\r\n        descEl = document.getElementById(\"project-create-description\"),\r\n        urlEl = document.getElementById(\"project-create-url\")\r\n    },\r\n\r\n    /* - Update - */\r\n    updateForm = {\r\n        titleOldEl = document.getElementById(\"project-update-title-old\"),\r\n        titleEl = document.getElementById(\"project-update-title-new\"),\r\n        descEl = document.getElementById(\"project-update-description\"),\r\n        urlEl = document.getElementById(\"project-update-url\")\r\n    },\r\n\r\n    /* - Delete - */\r\n    deleteForm = {\r\n        titleEl = document.getElementById(\"project-delete-title\")\r\n    }\r\n};\r\n\r\n/* - Education forms - */\r\n// Used to access inputs and of the education-dataset.\r\nconst educationForms = {\r\n    createFormEl = document.getElementById(\"education-form-create\"),\r\n    updateFormEl = document.getElementById(\"education-form-update\"),\r\n    deleteFormEl = document.getElementById(\"education-form-delete\"),\r\n\r\n    /* - Create - */\r\n    createForm = {\r\n        nameEl = document.getElementById(\"education-create-name\"),\r\n        schoolEl = document.getElementById(\"education-create-school\"),\r\n        typeEl = document.getElementById(\"education-create-type\"),\r\n        startEl = document.getElementById(\"education-create-start\"),\r\n        endEl = document.getElementById(\"education-create-end\")\r\n    },\r\n\r\n    /* - Update - */\r\n    updateForm = {\r\n        nameOldEl = document.getElementById(\"education-update-name-old\"),\r\n        nameEl = document.getElementById(\"education-update-name\"),\r\n        schoolEl = document.getElementById(\"education-update-school\"),\r\n        typeEl = document.getElementById(\"education-update-type\"),\r\n        startEl = document.getElementById(\"education-update-start\"),\r\n        endEl = document.getElementById(\"education-update-end\")\r\n    },\r\n\r\n    /* - Delete - */\r\n    deleteForm = {\r\n        nameEl = document.getElementById(\"education-delete-name\")\r\n    }\r\n};\r\n\r\n/* - Occupation forms - */\r\n// Used to access inputs and of the occupation-dataset.\r\nconst occupationForms = {\r\n    createFormEl = document.getElementById(\"occupation-form-create\"),\r\n    updateFormEl = document.getElementById(\"occupation-form-update\"),\r\n    deleteFormEl = document.getElementById(\"occupation-form-delete\"),\r\n\r\n    /* - Create - */\r\n    createForm = {\r\n        companyEl = document.getElementById(\"occupation-create-company\"),\r\n        titleEl = document.getElementById(\"occupation-create-title\"),\r\n        startEl = document.getElementById(\"occupation-create-start\"),\r\n        endEl = document.getElementById(\"occupation-create-end\")\r\n    },\r\n\r\n    /* - Update - */\r\n    updateForm = {\r\n        oldEntryEl = document.getElementById(\"occupation-update-entry\"),\r\n        companyEl = document.getElementById(\"occupation-update-company\"),\r\n        titleEl = document.getElementById(\"occupation-update-title\"),\r\n        startEl = document.getElementById(\"occupation-update-start\"),\r\n        endEl = document.getElementById(\"occupation-update-end\")\r\n    },\r\n\r\n    /* - Delete - */\r\n    deleteForm = {\r\n        entryEl = document.getElementById(\"occupation-delete-entry\")\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* ============= */\r\n/* = Functions = */\r\n/* ============= */\r\n/* - loadSelectBoxes - */\r\n// Used to load data into various selectboxes.\r\nfunction loadSelectBoxes(data) {\r\n    \r\n    /* - Project select-boxes - */\r\n    // Clear select-boxes.\r\n    projectForms.updateForm.titleOldEl.innerHTML = \"\";\r\n    projectForms.deleteForm.titleEl.innerHTML = \"\";\r\n\r\n    educationForms.updateForm.nameOldEl.innerHTML = \"\";\r\n    educationForms.deleteForm.nameEl.innerHTML = \"\";\r\n    educationForms.createForm.typeEl.innerHTML = \"\";\r\n    educationForms.updateForm.typeEl.innerHTML = \"\";\r\n\r\n    occupationForms.updateForm.oldEntryEl.innerHTML = \"\";\r\n    occupationForms.deleteForm.entryEl.innerHTML = \"\";\r\n\r\n    \r\n    // Load new data.\r\n    /* - Project select-boxes - */\r\n    data.projects.forEach(datum => {\r\n        projectForms.updateForm.titleOldEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Title + \"</option>\";\r\n        projectForms.deleteForm.titleEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Title + \"</option>\";\r\n    });\r\n\r\n    /* - Education select-boxes - */\r\n    data.educations.forEach(datum => {\r\n        educationForms.updateForm.nameOldEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Name + \"</option>\";\r\n\r\n        educationForms.deleteForm.nameEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Name + \"</option>\";\r\n    });\r\n\r\n    /* - Education type select-boxes - */\r\n    data.educationTypes.forEach(datum => {\r\n        educationForms.createForm.typeEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.ID + ' - ' + datum.Type + \"</option>\";\r\n\r\n        educationForms.updateForm.typeEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.ID + ' - ' + datum.Type + \"</option>\";\r\n    });\r\n\r\n    /* - Occupation select-boxes - */\r\n    data.occupations.forEach(datum => {\r\n        occupationForms.updateForm.oldEntryEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Company + ', ' + datum.Title + \"</option>\";\r\n        occupationForms.deleteForm.entryEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Company + ', ' + datum.Title + \"</option>\";\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* =================== */\r\n/* = Event listeners = */\r\n/* =================== */\r\n\r\n/* = Form toggles = */\r\n// Emphasizes the currently selected form-button, and reveals the related form.\r\n\r\n/* - Toggle Create - */\r\nformToggles.toggleCreate.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleUpdate.classList.remove(\"active\");\r\n    formToggles.toggleDelete.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        createForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        updateForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n/* - Toggle Update - */\r\nformToggles.toggleUpdate.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleCreate.classList.remove(\"active\");\r\n    formToggles.toggleDelete.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        updateForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        createForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.remove(\"active\");\r\n    }\r\n    \r\n});\r\n\r\n/* - Toggle Delete - */\r\nformToggles.toggleDelete.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleUpdate.classList.remove(\"active\");\r\n    formToggles.toggleCreate.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        createForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        updateForms[i].classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n\r\n\r\n/* = Dataset toggle = */\r\n// Reveals the interface of a specific dataset.\r\nselectorEl.addEventListener(\"change\", function(e) {\r\n    switch(selectorEl.options[selectorEl.selectedIndex].value)\r\n    {\r\n        /* - Project - */\r\n        case \"project\":\r\n            formContainers.project.classList.add(\"active\");\r\n            formContainers.education.classList.remove(\"active\");\r\n            formContainers.occupation.classList.remove(\"active\");\r\n        break;\r\n\r\n        /* - Education - */\r\n        case \"education\":\r\n            formContainers.education.classList.add(\"active\");\r\n            formContainers.project.classList.remove(\"active\");\r\n            formContainers.occupation.classList.remove(\"active\");\r\n        break;\r\n\r\n        /* - Occupation - */\r\n        case \"occupation\":        \r\n        formContainers.occupation.classList.add(\"active\");\r\n        formContainers.education.classList.remove(\"active\");\r\n        formContainers.project.classList.remove(\"active\");\r\n        break;\r\n    }\r\n\r\n});\r\n\r\n\r\n/* = Project CRUD = */\r\n// CRUD-interface for the project dataset.\r\n/* - Create - */\r\nprojectForms.createFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        dataset: \"projects\",\r\n        title: projectForms.createForm.titleEl.value,\r\n        description: projectForms.createForm.descEl.value,\r\n        url: projectForms.createForm.urlEl.value\r\n      })\r\n    })\r\n    .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            messageAreaEl.innerHTML = \"<p>Project was successfully added.</p>\"\r\n            // Clear form.\r\n            projectForms.createFormEl.reset();\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n  });\r\n\r\n/* - Update - */\r\nprojectForms.updateFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n    \r\n    fetch(url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n        dataset: \"projects\",\r\n        id: projectForms.updateForm.titleOldEl.value,\r\n        title: projectForms.updateForm.titleEl.value,\r\n        description: projectForms.updateForm.descEl.value,\r\n        url: projectForms.updateForm.urlEl.value\r\n        })\r\n    })\r\n        .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            messageAreaEl.innerHTML = \"<p>Project was successfully updated.</p>\"\r\n            // Clear form.\r\n            projectForms.updateFormEl.reset();\r\n        });\r\n        })\r\n        .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n        });\r\n    });\r\n\r\n/* - Delete - */\r\nprojectForms.deleteFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({\r\n    dataset: \"projects\",\r\n    id: projectForms.deleteForm.titleEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadSelectBoxes(data);\r\n        messageAreaEl.innerHTML = \"<p>Project was successfully deleted.</p>\"\r\n        // Clear form.\r\n        projectForms.deleteFormEl.reset();\r\n        \r\n    });\r\n})\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n\r\n\r\n/* = Occupations CRUD = */\r\n// CRUD-interface for the occupations dataset.\r\n\r\n/* - Create - */\r\noccupationForms.createFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        dataset: \"occupations\",\r\n        company: occupationForms.createForm.companyEl.value,\r\n        title: occupationForms.createForm.titleEl.value,\r\n        start: occupationForms.createForm.startEl.value,\r\n        end: occupationForms.createForm.endEl.value\r\n      })\r\n    })\r\n    .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            messageAreaEl.innerHTML = \"<p>Occupatino was successfully added.</p>\"\r\n            // Clear form.\r\n            occupationForms.createFormEl.reset();\r\n            \r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n  });\r\n\r\n/* - Update - */\r\noccupationForms.updateFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n    \r\n    fetch(url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n        dataset: \"occupations\",\r\n        id: occupationForms.updateForm.oldEntryEl.value,\r\n        company: occupationForms.updateForm.companyEl.value,\r\n        title: occupationForms.updateForm.titleEl.value,\r\n        start: occupationForms.updateForm.startEl.value,\r\n        end: occupationForms.updateForm.endEl.value\r\n        })\r\n    })\r\n        .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            messageAreaEl.innerHTML = \"<p>Occupation was successfully updated.</p>\"\r\n            // Clear form.\r\n            occupationForms.updateFormEl.reset();\r\n        });\r\n        })\r\n        .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n        });\r\n    });\r\n    \r\n/* - Delete - */\r\noccupationForms.deleteFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({\r\n    dataset: \"occupations\",\r\n    id: occupationForms.deleteForm.entryEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadSelectBoxes(data);\r\n        messageAreaEl.innerHTML = \"<p>Occupation was successfully deleted.</p>\"\r\n        // Clear form.\r\n        occupationForms.deleteFormEl.reset();\r\n    });\r\n})\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n/* = Educations CRUD = */\r\n// CRUD-interface for the educations dataset.\r\n\r\n/* - Create - */\r\neducationForms.createFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        dataset: \"educations\",\r\n        name: educationForms.createForm.nameEl.value,\r\n        school: educationForms.createForm.schoolEl.value,\r\n        start: educationForms.createForm.startEl.value,\r\n        end: educationForms.createForm.endEl.value,\r\n        typeID: educationForms.createForm.typeEl.value\r\n      })\r\n    })\r\n    .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            messageAreaEl.innerHTML = \"<p>Education was successfully added.</p>\"\r\n            // Clear form.\r\n            educationForms.createFormEl.reset();\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n  });\r\n\r\n/* - Update - */\r\neducationForms.updateFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n    \r\n    fetch(url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n        dataset: \"educations\",\r\n        id: educationForms.updateForm.nameOldEl.value,\r\n        name: educationForms.updateForm.nameEl.value,\r\n        school: educationForms.updateForm.schoolEl.value,\r\n        start: educationForms.updateForm.startEl.value,\r\n        end: educationForms.updateForm.endEl.value,\r\n        typeID: educationForms.updateForm.typeEl.value\r\n        })\r\n    })\r\n        .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            messageAreaEl.innerHTML = \"<p>Education was successfully updated.</p>\"\r\n            // Clear form.\r\n            educationForms.updateFormEl.reset();\r\n        });\r\n        })\r\n        .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n        });\r\n    });\r\n    \r\n/* - Delete - */\r\neducationForms.deleteFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({\r\n    dataset: \"educations\",\r\n    id: educationForms.deleteForm.nameEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadSelectBoxes(data);\r\n        messageAreaEl.innerHTML = \"<p>Education was successfully deleted.</p>\"\r\n        // Clear form.\r\n        educationForms.deleteFormEl.reset();\r\n    });\r\n})\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n\r\n\r\n// Load relevant database data when the DOM has been loaded.\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n    fetch(url)\r\n      .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data); // Display courses on successfull fetch.\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n});\r\n\r\n"]}