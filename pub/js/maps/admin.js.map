{"version":3,"sources":["admin.js"],"names":["url","selectorEl","document","getElementById","formContainers","project","occupation","education","formToggles","toggleCreate","toggleUpdate","toggleDelete","createForms","getElementsByClassName","updateForms","deleteForms","projectForms","createFormEl","updateFormEl","deleteFormEl","createForm","titleEl","descEl","urlEl","updateForm","titleOldEl","deleteForm","loadTitles","projects","innerHTML","forEach","ID","Title","addEventListener","e","target","classList","add","remove","i","length","options","selectedIndex","value","preventDefault","fetch","method","body","JSON","stringify","title","description","then","response","json","data","console","log","catch","err","id"],"mappings":"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","file":"../admin.js","sourcesContent":["const url = \"http://localhost/projekt/index.php\";\r\n\r\n/* ============= */\r\n/* = Bindings = */\r\n/* ============= */\r\n\r\n/* - Dataset selector - */\r\n// Used to choose between different datasets.\r\nconst selectorEl = document.getElementById(\"admin-selector\");\r\n\r\n    /* - Form containers - */\r\n    const formContainers = {\r\n        project = document.getElementById(\"project-form-cont\"),\r\n        occupation = document.getElementById(\"occupation-form-cont\"),\r\n        education = document.getElementById(\"education-form-cont\")\r\n    }\r\n\r\n\r\n/* - Form navigation buttons - */\r\n// Used to toggle between the different CRUD-options.\r\nconst formToggles = {\r\n    toggleCreate = document.getElementById(\"toggle-create\"),\r\n    toggleUpdate = document.getElementById(\"toggle-update\"),\r\n    toggleDelete = document.getElementById(\"toggle-delete\")\r\n}\r\n\r\n    /* - Forms lists - */\r\n    // Used to toggle all forms of a specific type.\r\n    const createForms = document.getElementsByClassName(\"form-create\");\r\n    const updateForms = document.getElementsByClassName(\"form-update\");\r\n    const deleteForms = document.getElementsByClassName(\"form-delete\");\r\n\r\n\r\n/* - Project forms - */\r\n// Used to access inputs and of the project-dataset.\r\n/* - Project forms - */\r\nconst projectForms = {\r\n    createFormEl = document.getElementById(\"project-form-create\"),\r\n    updateFormEl = document.getElementById(\"project-form-update\"),\r\n    deleteFormEl = document.getElementById(\"project-form-delete\"),\r\n\r\n    /* - Create - */\r\n    createForm = {\r\n        titleEl = document.getElementById(\"project-create-title\"),\r\n        descEl = document.getElementById(\"project-create-description\"),\r\n        urlEl = document.getElementById(\"project-create-url\")\r\n    },\r\n\r\n    /* - Update - */\r\n    updateForm = {\r\n        titleOldEl = document.getElementById(\"project-update-title-old\"),\r\n        titleEl = document.getElementById(\"project-update-title-new\"),\r\n        descEl = document.getElementById(\"project-update-description\"),\r\n        urlEl = document.getElementById(\"project-update-url\")\r\n    },\r\n\r\n    /* - Delete - */\r\n    deleteForm = {\r\n        titleEl = document.getElementById(\"project-delete-title\")\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* ============= */\r\n/* = Functions = */\r\n/* ============= */\r\n/* - loadTitles - */\r\n// Used to load object titles into the select-boxes. \r\nfunction loadTitles(projects) {\r\n    projectForms.updateForm.titleOldEl.innerHTML = \"\";\r\n    projectForms.deleteForm.titleEl.innerHTML = \"\";\r\n\r\n    projects.forEach(project => {\r\n    /* - Project select-boxes - */\r\n    projectForms.updateForm.titleOldEl.innerHTML +=\r\n    \"<option value='\" + project.ID + \"'>\" + project.ID + ' - ' + project.Title + \"</option>\";\r\n    projectForms.deleteForm.titleEl.innerHTML +=\r\n    \"<option value='\" + project.ID + \"'>\" + project.ID + ' - ' + project.Title + \"</option>\";\r\n      });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* =================== */\r\n/* = Event listeners = */\r\n/* =================== */\r\n\r\n/* = Form navigation toggles = */\r\n// Emphasizes the currently selected navigation-element, and reveals the related form.\r\n\r\n/* - Toggle Create - */\r\nformToggles.toggleCreate.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleUpdate.classList.remove(\"active\");\r\n    formToggles.toggleDelete.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        createForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        updateForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n/* - Toggle Update - */\r\nformToggles.toggleUpdate.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleCreate.classList.remove(\"active\");\r\n    formToggles.toggleDelete.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        updateForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        createForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.remove(\"active\");\r\n    }\r\n    \r\n});\r\n\r\n/* - Toggle Delete - */\r\nformToggles.toggleDelete.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleUpdate.classList.remove(\"active\");\r\n    formToggles.toggleCreate.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        createForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        updateForms[i].classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n\r\n\r\n/* = Dataset toggle = */\r\n// Reveals the interface of a specific dataset.\r\nselectorEl.addEventListener(\"change\", function(e) {\r\n    switch(selectorEl.options[selectorEl.selectedIndex].value)\r\n    {\r\n        /* - Project - */\r\n        case \"project\":\r\n            formContainers.project.classList.add(\"active\");\r\n            formContainers.education.classList.remove(\"active\");\r\n            formContainers.occupation.classList.remove(\"active\");\r\n        break;\r\n\r\n        /* - Education - */\r\n        case \"education\":\r\n            formContainers.education.classList.add(\"active\");\r\n            formContainers.project.classList.remove(\"active\");\r\n            formContainers.occupation.classList.remove(\"active\");\r\n        break;\r\n\r\n        /* - Occupation - */\r\n        case \"occupation\":        \r\n        formContainers.occupation.classList.add(\"active\");\r\n        formContainers.education.classList.remove(\"active\");\r\n        formContainers.project.classList.remove(\"active\");\r\n        break;\r\n    }\r\n\r\n});\r\n\r\n\r\n/* = Project CRUD = */\r\n// CRUD-interface for the project dataset.\r\n/* - Create - */\r\nprojectForms.createFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        title: projectForms.createForm.titleEl.value,\r\n        description: projectForms.createForm.descEl.value,\r\n        url: projectForms.createForm.urlEl.value\r\n      })\r\n    })\r\n    .then(function(response) {\r\n        response.json().then(data => {\r\n            loadTitles(data);\r\n            console.log(\"Project successfully added.\");\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n  });\r\n\r\n/* - Delete - */\r\nprojectForms.deleteFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({\r\n    id: projectForms.deleteForm.titleEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadTitles(data);\r\n        console.log(\"Project successfully removed.\");\r\n    });\r\n})\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n/* - Update - */\r\nprojectForms.updateFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"PUT\",\r\n    body: JSON.stringify({\r\n    id: projectForms.updateForm.titleOldEl.value,\r\n    title: projectForms.updateForm.titleEl.value,\r\n    description: projectForms.updateForm.descEl.value,\r\n    url: projectForms.updateForm.urlEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadTitles(data);\r\n        console.log(\"Project successfully added.\");\r\n    });\r\n    })\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n    fetch(url)\r\n      .then(function(response) {\r\n        response.json().then(data => {\r\n            loadTitles(data); // Display courses on successfull fetch.\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n});\r\n\r\n"]}