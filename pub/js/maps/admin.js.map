{"version":3,"sources":["admin.js"],"names":["url","selectorEl","document","getElementById","formContainers","project","occupation","education","formToggles","toggleCreate","toggleUpdate","toggleDelete","createForms","getElementsByClassName","updateForms","deleteForms","projectForms","createFormEl","updateFormEl","deleteFormEl","createForm","titleEl","descEl","urlEl","updateForm","titleOldEl","deleteForm","educationForms","nameEl","schoolEl","typeEl","startEl","endEl","nameOldEl","startEt","occupationForms","companyEl","oldEntryEl","entryEl","loadSelectBoxes","data","innerHTML","projects","forEach","datum","ID","Title","educations","Name","educationTypes","Type","occupations","Company","addEventListener","e","target","classList","add","remove","i","length","options","selectedIndex","value","preventDefault","fetch","method","body","JSON","stringify","dataset","title","description","then","response","json","console","log","reset","catch","err","id","company","start","end"],"mappings":"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","file":"../admin.js","sourcesContent":["const url = \"http://localhost/projekt/index.php\";\r\n\r\n/* ============= */\r\n/* = Bindings = */\r\n/* ============= */\r\n\r\n/* - Dataset selector - */\r\n// Used to choose between different datasets.\r\nconst selectorEl = document.getElementById(\"admin-selector\");\r\n\r\n    /* - Form containers - */\r\n    // Used to access the containers that hold the different dataset-forms.\r\n    const formContainers = {\r\n        project = document.getElementById(\"project-form-cont\"),\r\n        occupation = document.getElementById(\"occupation-form-cont\"),\r\n        education = document.getElementById(\"education-form-cont\")\r\n    }\r\n\r\n\r\n/* - Form navigation buttons - */\r\n// Used to switch between the different CRUD-options.\r\nconst formToggles = {\r\n    toggleCreate = document.getElementById(\"toggle-create\"),\r\n    toggleUpdate = document.getElementById(\"toggle-update\"),\r\n    toggleDelete = document.getElementById(\"toggle-delete\")\r\n}\r\n\r\n    /* - Forms lists - */\r\n    // Used to toggle all forms of a specific type.\r\n    const createForms = document.getElementsByClassName(\"form-create\");\r\n    const updateForms = document.getElementsByClassName(\"form-update\");\r\n    const deleteForms = document.getElementsByClassName(\"form-delete\");\r\n\r\n\r\n/* - Project forms - */\r\n// Used to access inputs and of the project-dataset.\r\nconst projectForms = {\r\n    createFormEl = document.getElementById(\"project-form-create\"),\r\n    updateFormEl = document.getElementById(\"project-form-update\"),\r\n    deleteFormEl = document.getElementById(\"project-form-delete\"),\r\n\r\n    /* - Create - */\r\n    createForm = {\r\n        titleEl = document.getElementById(\"project-create-title\"),\r\n        descEl = document.getElementById(\"project-create-description\"),\r\n        urlEl = document.getElementById(\"project-create-url\")\r\n    },\r\n\r\n    /* - Update - */\r\n    updateForm = {\r\n        titleOldEl = document.getElementById(\"project-update-title-old\"),\r\n        titleEl = document.getElementById(\"project-update-title-new\"),\r\n        descEl = document.getElementById(\"project-update-description\"),\r\n        urlEl = document.getElementById(\"project-update-url\")\r\n    },\r\n\r\n    /* - Delete - */\r\n    deleteForm = {\r\n        titleEl = document.getElementById(\"project-delete-title\")\r\n    }\r\n};\r\n\r\n/* - Education forms - */\r\n// Used to access inputs and of the education-dataset.\r\nconst educationForms = {\r\n    createFormEl = document.getElementById(\"education-form-create\"),\r\n    updateFormEl = document.getElementById(\"education-form-update\"),\r\n    deleteFormEl = document.getElementById(\"education-form-delete\"),\r\n\r\n    /* - Create - */\r\n    createForm = {\r\n        nameEl = document.getElementById(\"education-create-name\"),\r\n        schoolEl = document.getElementById(\"education-create-school\"),\r\n        typeEl = document.getElementById(\"education-create-type\"),\r\n        startEl = document.getElementById(\"education-create-start\"),\r\n        endEl = document.getElementById(\"education-create-end\")\r\n    },\r\n\r\n    /* - Update - */\r\n    updateForm = {\r\n        nameOldEl = document.getElementById(\"education-update-name-old\"),\r\n        nameEl = document.getElementById(\"education-update-name\"),\r\n        schoolEl = document.getElementById(\"education-update-school\"),\r\n        typeEl = document.getElementById(\"education-update-type\"),\r\n        startEt = document.getElementById(\"education-update-start\"),\r\n        endEl = document.getElementById(\"education-update-end\")\r\n    },\r\n\r\n    /* - Delete - */\r\n    deleteForm = {\r\n        nameEl = document.getElementById(\"education-delete-name\")\r\n    }\r\n};\r\n\r\n/* - Occupation forms - */\r\n// Used to access inputs and of the occupation-dataset.\r\nconst occupationForms = {\r\n    createFormEl = document.getElementById(\"occupation-form-create\"),\r\n    updateFormEl = document.getElementById(\"occupation-form-update\"),\r\n    deleteFormEl = document.getElementById(\"occupation-form-delete\"),\r\n\r\n    /* - Create - */\r\n    createForm = {\r\n        companyEl = document.getElementById(\"occupation-create-company\"),\r\n        titleEl = document.getElementById(\"occupation-create-title\"),\r\n        startEl = document.getElementById(\"occupation-create-start\"),\r\n        endEl = document.getElementById(\"occupation-create-end\")\r\n    },\r\n\r\n    /* - Update - */\r\n    updateForm = {\r\n        oldEntryEl = document.getElementById(\"occupation-update-entry\"),\r\n        companyEl = document.getElementById(\"occupation-update-company\"),\r\n        titleEl = document.getElementById(\"occupation-update-title\"),\r\n        startEl = document.getElementById(\"occupation-update-start\"),\r\n        endEl = document.getElementById(\"occupation-update-end\")\r\n    },\r\n\r\n    /* - Delete - */\r\n    deleteForm = {\r\n        entryEl = document.getElementById(\"occupation-delete-entry\")\r\n    }\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* ============= */\r\n/* = Functions = */\r\n/* ============= */\r\n/* - loadSelectBoxes - */\r\n// Used to load data into various selectboxes.\r\nfunction loadSelectBoxes(data) {\r\n    \r\n    /* - Project select-boxes - */\r\n    // Clear select-boxes.\r\n    projectForms.updateForm.titleOldEl.innerHTML = \"\";\r\n    projectForms.deleteForm.titleEl.innerHTML = \"\";\r\n\r\n    educationForms.updateForm.nameOldEl.innerHTML = \"\";\r\n    educationForms.deleteForm.nameEl.innerHTML = \"\";\r\n    educationForms.createForm.typeEl.innerHTML = \"\";\r\n    educationForms.updateForm.typeEl.innerHTML = \"\";\r\n\r\n    occupationForms.updateForm.oldEntryEl.innerHTML = \"\";\r\n    occupationForms.deleteForm.entryEl.innerHTML = \"\";\r\n\r\n    \r\n    // Load new data.\r\n    /* - Project select-boxes - */\r\n    data.projects.forEach(datum => {\r\n        projectForms.updateForm.titleOldEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Title + \"</option>\";\r\n        projectForms.deleteForm.titleEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Title + \"</option>\";\r\n    });\r\n\r\n    /* - Education select-boxes - */\r\n    data.educations.forEach(datum => {\r\n        educationForms.updateForm.nameOldEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Name + \"</option>\";\r\n\r\n        educationForms.deleteForm.nameEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Name + \"</option>\";\r\n    });\r\n\r\n    /* - Education type select-boxes - */\r\n    data.educationTypes.forEach(datum => {\r\n        educationForms.createForm.typeEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.ID + ' - ' + datum.Type + \"</option>\";\r\n\r\n        educationForms.updateForm.typeEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.ID + ' - ' + datum.Type + \"</option>\";\r\n    });\r\n\r\n    /* - Occupation select-boxes - */\r\n    data.occupations.forEach(datum => {\r\n        occupationForms.updateForm.oldEntryEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Company + ', ' + datum.Title + \"</option>\";\r\n        occupationForms.deleteForm.entryEl.innerHTML +=\r\n        \"<option value='\" + datum.ID + \"'>\" + datum.Company + ', ' + datum.Title + \"</option>\";\r\n    });\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/* =================== */\r\n/* = Event listeners = */\r\n/* =================== */\r\n\r\n/* = Form toggles = */\r\n// Emphasizes the currently selected form-button, and reveals the related form.\r\n\r\n/* - Toggle Create - */\r\nformToggles.toggleCreate.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleUpdate.classList.remove(\"active\");\r\n    formToggles.toggleDelete.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        createForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        updateForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n/* - Toggle Update - */\r\nformToggles.toggleUpdate.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleCreate.classList.remove(\"active\");\r\n    formToggles.toggleDelete.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        updateForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        createForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.remove(\"active\");\r\n    }\r\n    \r\n});\r\n\r\n/* - Toggle Delete - */\r\nformToggles.toggleDelete.addEventListener(\"click\", function(e) {\r\n    // Show which toggle is currently active.\r\n    e.target.classList.add(\"active\");\r\n    formToggles.toggleUpdate.classList.remove(\"active\");\r\n    formToggles.toggleCreate.classList.remove(\"active\");\r\n    // Show which form is currently active and hide others.\r\n    for(let i = 0; i < deleteForms.length; i++)\r\n    {\r\n        deleteForms[i].classList.add(\"active\");\r\n    }\r\n    for(let i = 0; i < updateForms.length; i++)\r\n    {\r\n        createForms[i].classList.remove(\"active\");\r\n    }\r\n    for(let i = 0; i < createForms.length; i++)\r\n    {\r\n        updateForms[i].classList.remove(\"active\");\r\n    }\r\n});\r\n\r\n\r\n\r\n/* = Dataset toggle = */\r\n// Reveals the interface of a specific dataset.\r\nselectorEl.addEventListener(\"change\", function(e) {\r\n    switch(selectorEl.options[selectorEl.selectedIndex].value)\r\n    {\r\n        /* - Project - */\r\n        case \"project\":\r\n            formContainers.project.classList.add(\"active\");\r\n            formContainers.education.classList.remove(\"active\");\r\n            formContainers.occupation.classList.remove(\"active\");\r\n        break;\r\n\r\n        /* - Education - */\r\n        case \"education\":\r\n            formContainers.education.classList.add(\"active\");\r\n            formContainers.project.classList.remove(\"active\");\r\n            formContainers.occupation.classList.remove(\"active\");\r\n        break;\r\n\r\n        /* - Occupation - */\r\n        case \"occupation\":        \r\n        formContainers.occupation.classList.add(\"active\");\r\n        formContainers.education.classList.remove(\"active\");\r\n        formContainers.project.classList.remove(\"active\");\r\n        break;\r\n    }\r\n\r\n});\r\n\r\n\r\n/* = Project CRUD = */\r\n// CRUD-interface for the project dataset.\r\n/* - Create - */\r\nprojectForms.createFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        dataset: \"projects\",\r\n        title: projectForms.createForm.titleEl.value,\r\n        description: projectForms.createForm.descEl.value,\r\n        url: projectForms.createForm.urlEl.value\r\n      })\r\n    })\r\n    .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            console.log(\"Project successfully added.\");\r\n            // Clear form.\r\n            projectForms.createFormEl.reset();\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n  });\r\n\r\n/* - Update - */\r\nprojectForms.updateFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n    \r\n    fetch(url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n        dataset: \"projects\",\r\n        id: projectForms.updateForm.titleOldEl.value,\r\n        title: projectForms.updateForm.titleEl.value,\r\n        description: projectForms.updateForm.descEl.value,\r\n        url: projectForms.updateForm.urlEl.value\r\n        })\r\n    })\r\n        .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            console.log(\"Project successfully added.\");\r\n            // Clear form.\r\n            projectForms.updateFormEl.reset();\r\n        });\r\n        })\r\n        .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n        });\r\n    });\r\n\r\n/* - Delete - */\r\nprojectForms.deleteFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({\r\n    dataset: \"projects\",\r\n    id: projectForms.deleteForm.titleEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadSelectBoxes(data);\r\n        console.log(\"Project successfully removed.\");\r\n        // Clear form.\r\n        projectForms.deleteFormEl.reset();\r\n        \r\n    });\r\n})\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n\r\n\r\n/* = Occupations CRUD = */\r\n// CRUD-interface for the occupations dataset.\r\n/* - Create - */\r\noccupationForms.createFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        dataset: \"occupations\",\r\n        company: occupationForms.createForm.companyEl.value,\r\n        title: occupationForms.createForm.titleEl.value,\r\n        start: occupationForms.createForm.startEl.value,\r\n        end: occupationForms.createForm.endEl.value\r\n      })\r\n    })\r\n    .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            console.log(\"Project successfully added.\");\r\n            // Clear form.\r\n            occupationForms.createFormEl.reset();\r\n            \r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n  });\r\n\r\n/* - Update - */\r\noccupationForms.updateFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n    \r\n    fetch(url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n        dataset: \"occupations\",\r\n        id: occupationForms.updateForm.oldEntryEl.value,\r\n        company: occupationForms.updateForm.companyEl.value,\r\n        title: occupationForms.updateForm.titleEl.value,\r\n        start: occupationForms.updateForm.startEl.value,\r\n        end: occupationForms.updateForm.endEl.value\r\n        })\r\n    })\r\n        .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            console.log(\"Project successfully added.\");\r\n            // Clear form.\r\n            occupationForms.updateFormEl.reset();\r\n        });\r\n        })\r\n        .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n        });\r\n    });\r\n    \r\n/* - Delete - */\r\noccupationForms.deleteFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({\r\n    dataset: \"occupations\",\r\n    id: occupationForms.deleteForm.entryEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadSelectBoxes(data);\r\n        console.log(\"Project successfully removed.\");\r\n        // Clear form.\r\n        occupationForms.deleteFormEl.reset();\r\n    });\r\n})\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n\r\n\r\n/* = Occupations CRUD = */\r\n// CRUD-interface for the occupations dataset.\r\n/* - Create - */\r\neducationForms.createFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\n    fetch(url, {\r\n      method: \"POST\",\r\n      body: JSON.stringify({\r\n        dataset: \"educations\",\r\n        company: educationForms.createForm.companyEl.value,\r\n        title: educationForms.createForm.titleEl.value,\r\n        start: educationForms.createForm.startEl.value,\r\n        end: educationForms.createForm.endEl.value\r\n      })\r\n    })\r\n    .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            console.log(\"Project successfully added.\");\r\n            // Clear form.\r\n            educationForms.createFormEl.reset();\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n  });\r\n\r\n/* - Update - */\r\neducationForms.updateFormEl.addEventListener(\"submit\", function(e) {\r\n    e.preventDefault(); // Prevent the form from being submited the default way.\r\n    \r\n    fetch(url, {\r\n        method: \"PUT\",\r\n        body: JSON.stringify({\r\n        dataset: \"educations\",\r\n        id: educationForms.updateForm.oldEntryEl.value,\r\n        company: educationForms.updateForm.companyEl.value,\r\n        title: educationForms.updateForm.titleEl.value,\r\n        start: educationForms.updateForm.startEl.value,\r\n        end: educationForms.updateForm.endEl.value\r\n        })\r\n    })\r\n        .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data);\r\n            console.log(\"Project successfully added.\");\r\n            // Clear form.\r\n            educationForms.updateFormEl.reset();\r\n        });\r\n        })\r\n        .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n        });\r\n    });\r\n    \r\n/* - Delete - */\r\neducationForms.deleteFormEl.addEventListener(\"submit\", function(e) {\r\ne.preventDefault(); // Prevent the form from being submited the default way.\r\n\r\nfetch(url, {\r\n    method: \"DELETE\",\r\n    body: JSON.stringify({\r\n    dataset: \"educations\",\r\n    id: educationForms.deleteForm.entryEl.value\r\n    })\r\n})\r\n    .then(function(response) {\r\n    response.json().then(data => {\r\n        loadSelectBoxes(data);\r\n        console.log(\"Project successfully removed.\");\r\n        // Clear form.\r\n        educationForms.deleteFormEl.reset();\r\n    });\r\n})\r\n    .catch(function(err) {\r\n    console.log(\"Fatal error: \", err);\r\n    });\r\n});\r\n\r\n\r\n\r\n// Load relevant database data when the DOM has been loaded.\r\ndocument.addEventListener(\"DOMContentLoaded\", function(){\r\n    fetch(url)\r\n      .then(function(response) {\r\n        response.json().then(data => {\r\n            loadSelectBoxes(data); // Display courses on successfull fetch.\r\n        });\r\n      })\r\n      .catch(function(err) {\r\n        console.log(\"Fatal error: \", err);\r\n      });\r\n});\r\n\r\n"]}